#!/usr/bin/env bash

declare -A additionalPackages=(
    ["AMD packages"]="amdPackages"
#    ["Intel packages"]="intelPackages"
    ["Packages only for 'Framework16' laptop"]="framework16Packages"
#    ["Boot splash packages"]="bootSplash"
    ["Login manager (greeted+nwg-hello)"]="loginManager"
    ["Firmware packages"]="firmwarePackages"
    ["Extra fonts packages"]="extraFontsPackages"
    ["Docker (not Desktop)"]="dockerPackages"
    ["My favorite applications"]="applicationPackages"
    ["Virt-Manager"]="vmPackages"
)

dockerPackages=(
    "docker"
    "docker-buildx"
    "docker-compose"
    "docker-credential-secretservice-bin"
    "docker-machine"
    "lazydocker"
)

amdPackages=(
    "amdguid-wayland-bin"
    "amf-amdgpu-pro"
    "ffmpeg-amd-full"
    "mpv-amd-full-git"
    "vulkan-amdgpu-pro"
    "vulkan-headers-git"
    "vulkan-radeon"
    "vulkan-tools"
)

intelPackages=(
)

extraFontsPackages=(
    "gnu-free-fonts"
    "powerline-console-fonts"
    "powerline-fonts"
    "terminess-powerline-font-git"
    "terminus-font"
    "ttf-hack"
    "ttf-jetbrains-mono"
    "ttf-jetbrains-mono-nerd"
    "ttf-roboto"
    "ttf-ubuntu-font-family"
    "woff2-font-awesome"
)

bootSplash=(
    "plymouth-git"
    "plymouth-theme-arch-os"
    "plymouth-theme-framework-git"
    "plymouth-theme-optimus-git"
)

loginManager=(
    "nwg-hello"
    "mugshot"
#    "sddm"
)

framework16Packages=(
    "certbot"
    "certbot-dns-dnsimple"
    "framework-laptop-kmod-dkms-git"
    "framework-sensors-git"
    "framework-system"
    "sof-firmware"
)

firmwarePackages=(
    "ast-firmware"
    "linux-firmware"
#    "linux-lts"
#    "linux-lts-headers"
#    "linux-zen"
#    "linux-zen-headers"
    "mkinitcpio-firmware"
)

applicationPackages=(
    "appimagelauncher"

    # Thunderbird alternative https://www.betterbird.eu/
    "betterbird-de-bin"

#    "binance"
    "brave-bin"
    "chromium"
    "easyeffects" "lsp-plugins-lv2" "mda.lv2"
#    "filezilla"
    "firefox-developer-edition" "firefox-developer-edition-i18n-de"
    "geany" "geany-plugins" "geany-plugin-jsonprettifier"
    "gitkraken"
    "gnome-calculator"
    "gnome-keyring"
    "gnome-mplayer" "mplayer"
    "gnome-software"
    "inkscape"
#    "keepass"
#    "keepass-de"
    "keepassxc" "keepassxc-wordlist-german-better"
    "libreoffice-fresh-de"
    "mediainfo" "mediainfo-gui"
    "meld"
    "mission-center"
#    "mousepad"
    "naps2-bin"
    "nextcloud-client"
    "nwg-displays"
    "obs-studio"
    "openfortigui"
    "phpstorm" "phpstorm-jre" "wmname"
    "pinta"
    "qalculate-gtk"
    "qpdfview"
    "qt5ct"
    "qt6ct"
    "rambox-pro-bin"
    "rambox-pro-bin-blur-me-not"
    "remote-desktop-manager" "freerdp"
    "rustdesk-bin"
    "signal-desktop"
    "simple-scan"
    "smile"
    "solaar"
    "teams-for-linux-wayland-hook"
    "teamviewer"
    "thunar" "thunar-archive-plugin" "thunar-shares-plugin" "thunar-volman-git" "xarchiver"
#    "thunderbird" "thunderbird-i18n-de"
    "timeshift"
    "vlc" "phonon-qt6-vlc" "vlc-plugins-all"

)

vmPackages=(
    "edk2-ovmf"
    "libguestfs"
    "qemu-base"
    "qemu-desktop"
    "qemu-full"
    "qemu-guest-agent"
    "qemu-user-static"
    "qemu-user-static-binfmt"
    "virt-manager"
    "virt-viewer"
    "vde2"
)

printerPackages=(
    "brscan-skey"
    "brscan5"
    "colord"
    "cups"
    "cups-browsed"
    "cups-pdf"
    "cups-filters"
    "foomatic-db"
    "footmatic-db-engine"
    "foomatic-db-gutenprint-ppds"
    "foomatic-db-nonfree"
    "foomatic-db-nonfree-ppds"
    "foomatic-db-ppds"
    "ghostscript"
    "gutenprint"
    "ipp-usb"
    "nss-mdns"
    "system-config-printer"
)

systemPackages=(
    "7zip"
#    "acpi"
#    "acpi_call-dkms"
#    "acpid"
#    "alacritty"
#    "alsa-utils"
#    "aylurs-gtk-shell"
    "bash-completion"

    # Alternative for cat
    "bat"

    "bluez"
    "bluez-utils"
    "bolt"
    "breeze-icons"
    "bridge-utils"

    # Alternative to htop
#    "btop"

    "btrfs-progs"
#    "bun-bin"
    "cdrtools"
    "dconf-editor"
    "downgrade"

    # Disk Usage/Free Utility
    "duf"

#    "feh"
    "ffmpegthumbnailer"
#    "firmware-manager-git"
    "fwupd"
#    "gparted"
#    "grub"
#    "grub-btrfs"
#    "gtk-sharp-3"
    "gufw"
#    "guvcview"
    "gvfs"
    "gvfs-smb"
    "htop"
    "hunspell-de"
    "i2c-tools"
    "imagemagick"
    "inetutils"
    "inxi"
    "iptables-nft"
#    "kguiaddons"
#    "lib32-gcc-libs"
#    "libadwaita"
    "libcurl-gnutls"
    "libfido2"
    "libgepub"
#    "libgnome-keyring"
#    "libgsf"
#    "libopenraw"
    "libusb"
    "logrotate"
    "man-pages"
#    "matugen-bin"
    "mesa-utils"
    "meson"
    "mkinitcpio-numlock"
    "nano"
    "nano-syntax-highlighting"
    "net-tools"
    "networkmanager-openconnect"
    "networkmanager-openvpn"
    "nfs-utils"
    "nmap"
#    "nodejs-lts-iron"
    "ntfs-3g"
    "numlockx"
#    "nut-monitor"
    "nvme-cli"
    "openbsd-netcat"
    "openssh"
#    "openssh-askpass"
    "pacman-contrib"
    "perl-image-exiftool"
    "pipewire" "gst-plugin-pipewire"
    "pipewire-alsa"
    "pipewire-jack"
    "pipewire-libcamera"
    "pipewire-pulse"
    "pipewire-v4l2"
    "pipewire-zeroconf"
    "powertop"
    "python-libevdev"
#    "python-pip"
#    "python-psutil"
#    "python-qt-material"
    "python-rich"
#    "python-screeninfo"
    "qt5-graphicaleffects"
    "qt5-quickcontrols2"
    "qt6-multimedia-ffmpeg"
#    "qt6-virtualkeyboard"
    "reflector"
    "rofi-wayland"
    "rsync"
    "seahorse"
    "slurp"
    "smartmontools"
    "speech-dispatcher"
    "sshfs"
#    "starship"
#    "stow"
#    "strace"
#    "sudo-askpass-git"
#    "swtpm"
    "system-config-printer"
    "systemd-numlockontty"
    "tcpdump"
    "tmux"
#    "trizen"
#    "ufw"
#    "uglify-js"
    "usbutils"
    "vim"
#    "weston"
    "wireguard-tools"
    "wl-clip-persist"
    "wl-screenrec-git"
    "wlogout"
    "xdg-utils"

#    "xf86-video-amdgpu"
#    "xf86-video-qxl"
#    "xf86-video-vesa"
#    "xorg-bdftopcf"
#    "xorg-docs"
#    "xorg-font-util"
#    "xorg-fonts-100dpi"
#    "xorg-fonts-75dpi"
#    "xorg-fonts-encodings"
#    "xorg-iceauth"
#    "xorg-mkfontscale"
#    "xorg-server"
#    "xorg-server-common"
#    "xorg-server-devel"
#    "xorg-server-xephyr"
#    "xorg-server-xnest"
#    "xorg-server-xvfb"
#    "xorg-sessreg"
#    "xorg-setxkbmap"
#    "xorg-smproxy"
#    "xorg-x11perf"
#    "xorg-xauth"
#    "xorg-xbacklight"
#    "xorg-xcmsdb"
#    "xorg-xcursorgen"
#    "xorg-xdpyinfo"
#    "xorg-xdriinfo"
#    "xorg-xev"
#    "xorg-xgamma"
#    "xorg-xhost"
#    "xorg-xinit"
#    "xorg-xinput"
#    "xorg-xkbcomp"
#    "xorg-xkbevd"
#    "xorg-xkbutils"
#    "xorg-xkill"
#    "xorg-xlsatoms"
#    "xorg-xlsclients"
#    "xorg-xmodmap"
#    "xorg-xpr"
#    "xorg-xprop"
#    "xorg-xrandr"
#    "xorg-xrdb"
#    "xorg-xrefresh"
#    "xorg-xset"
#    "xorg-xsetroot"
#    "xorg-xvinfo"
#    "xorg-xwayland"
#    "xorg-xwd"
#    "xorg-xwininfo"
#    "xorg-xwud"
#    "xsel"
    "zram-generator"
    "zsh-completions"
)


IFS=$'\n'

read -d '' -a selectedKeys < <(gum choose --no-limit --height 20 --cursor-prefix "( ) " --selected-prefix "(x) " --unselected-prefix "( ) " --selected="$selectedlist" "${!additionalPackages[@]}")

IFS=$' \t\n'

for key in "${selectedKeys[@]}"; do
    value="${additionalPackages["${key}"]}"
    readarray -t packages_to_install < <(eval "printf '%s\n' \"\${${value}[@]}\"")
    echo ":: Installation for ${key}:"
    _installPackages "${packages_to_install[@]}"

    if [[ "${value}" == "loginManager" ]]; then
        echo ":: Configure login manager"
        sudo cp -f ${SCRIPT_DIR}/arch/nwg-hello/nwg-hello* /etc/nwg-hello/
        sudo cp -f ${SCRIPT_DIR}/arch/nwg-hello/greetd.conf /etc/greetd/
        sudo cp -f /etc/pam.d/greetd /etc/pam.d/greetd.bkp
        sudo cp -f ${SCRIPT_DIR}/arch/nwg-hello/greetd.pam.file /etc/pam.d/greetd
        sudo cp -f /usr/share/nwg-hello/nwg.jpg /usr/share/nwg-hello/current_wallpaper.jpg
    fi
done
