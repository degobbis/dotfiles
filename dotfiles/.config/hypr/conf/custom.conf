# Add your additional Hyprland configurations here
#
# This is an additional key binding
# bind = $mainMod CTRL, up, workspace, empty
#
# Example for xwayland
# xwayland {
#   force_zero_scaling = true
# }

ecosystem {
    enforce_permissions = false
    permission = /usr/(bin|local/bin)/hyprpm, plugin, allow
}

# QT
env = QT_QPA_PLATFORMTHEME,qt6ct
#env = QT_QPA_PLATFORMTHEME,qt5ct

# SDL version (für Nvidia)
#env = SDL_VIDEODRIVER,wayland

# Speicherort für Screenshots
env = XDG_SCREENSHOTS_DIR,$HOME/Bilder/screenshots

env = _JAVA_AWT_WM_NONREPARENTING,1

# Set the cursor size for xcursor
env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24

# Disable appimage launcher by default
env = APPIMAGELAUNCHER_DISABLE,1

# Jetbrains IDE Fix for rendering
exec-once = wmname LG3D

# Start NetworkManager applet
#exec-once = ~/.config/ml4w/scripts/nm-applet.sh

# Update hyprland plugins if needed
exec-once = ~/.config/hypr/scripts/gdg-update-hyprland-plugins.sh

# Hyprland Plugins laden
exec = hyprpm reload -n

# Start my apps
exec-once = ~/.config/ml4w/scripts/guido-autostart.sh


# No Hardware Cursor (für Nvidia)
# cursor {
#     no_hardware_cursors = true
# }


debug {
    disable_logs = true
    disable_time = false
}

misc {
    mouse_move_enables_dpms = true
    key_press_enables_dpms = true
}

input {
    kb_layout = de
    kb_variant = nodeadkeys
    kb_model = pc105
    kb_options = shift:breaks_caps
    kb_rules = evdev
    numlock_by_default = true
    follow_mouse = 1
    mouse_refocus = false

    touchpad {
        # for desktop
        # natural_scroll = false

        # for laptop
        natural_scroll = true
        middle_button_emulation = false
        clickfinger_behavior = true
        disable_while_typing = true
    }
    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

plugin {
    split-monitor-workspaces {
        count = 10
        keep_focused = 0
        enable_notifications = 0
    }

    hyprbars {
        # example config
        bar_height = 30
        bar_text_size = 12

        # example buttons (R -> L)
        # hyprbars-button = color, size, on-click
        #hyprbars-button = rgb(ff4040), 20, 󰖭, hyprctl dispatch killactive
        #hyprbars-button = rgb(eeee11), 20, , hyprctl dispatch fullscreen 1
    }
}

#Rambox auf Monitor 0
windowrule = monitor 0,class:^(rambox)$

# Unset previous rules
windowrule = unset,class:(com.ml4w.sidebar)
windowrule = unset,class:(io.missioncenter.MissionCenter)
windowrule = unset,class:(dotfiles-floating)
windowrule = unset,class:(ml4w.dotfiles.floating)
windowrule = unset,title:(ChatGPT.*)
windowrule = unset,title:(.*chat.openai.com.*)
windowrule = unset,title:(nwg-displays)

# NUT Monitor
windowrule = float,class:(nut-monitor-py3qt5)

# nwg-look
windowrule = float,class:(nwg-displays)
windowrule = size 90% 80%,class:(nwg-displays)
windowrule = center,class:(nwg-displays)
windowrule = pin,class:(nwg-displays)


# ML4W Sidebar floating
windowrule = float, class:(com.ml4w.sidebar)
windowrule = pin, class:(com.ml4w.sidebar)
windowrule = size 400 726,class:(com.ml4w.sidebar)
windowrule = move 100%-w-16 90,class:(com.ml4w.sidebar)

# System Mission Center
windowrule = float,class:(io.missioncenter.MissionCenter)
windowrule = pin,class:(io.missioncenter.MissionCenter)
windowrule = center,class:(io.missioncenter.MissionCenter)
windowrule = size 90% 80%,class:(io.missioncenter.MissionCenter)

# General floating
windowrule = float,class:(dotfiles-floating)
windowrule = pin,class:(dotfiles-floating)
windowrule = center,class:(dotfiles-floating)
windowrule = size 90% 80%,class:(dotfiles-floating)

# Floating for Ghostty
windowrule = float,class:(ml4w.dotfiles.floating)
windowrule = size 90% 80%,class:(ml4w.dotfiles.floating)
windowrule = center,class:(ml4w.dotfiles.floating)
windowrule = pin, class:(ml4w.dotfiles.floating)

# Gnome Feh/Loupe
windowrule = float,class:(feh)
windowrule = size 90% 80%,class:(feh)
windowrule = float,class:(org.gnome.Loupe)
windowrule = size 90% 80%,class:(org.gnome.Loupe)
